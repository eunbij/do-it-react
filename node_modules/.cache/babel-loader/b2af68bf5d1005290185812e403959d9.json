{"ast":null,"code":"var _jsxFileName = \"/Users/eunbi/Documents/ebgit/do-it-react/src/03/NewCounter.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass NewCounter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.increaseCount = this.increaseCount.bind(this);\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const {\n      count\n    } = props;\n    return {\n      // 프로퍼티에서 전달된 count값을 보관\n      count,\n      newCount: count === state.count ? // 프로퍼티가 변경되지 않았다면 기존 state값으로 설정\n      state.newCount : // 프로퍼티가 변경되었다면 변경된 프로퍼티값으로 설정\n      count\n    };\n  }\n\n  increaseCount() {\n    this.setState(_ref => {\n      let {\n        newCount\n      } = _ref;\n      return {\n        newCount: newCount + 1\n      };\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uD604\\uC7AC \\uCE74\\uC6B4\\uD2B8: \", this.state.newCount, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.increaseCount,\n        children: \"\\uCE74\\uC6B4\\uD2B8 \\uC99D\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default NewCounter;","map":{"version":3,"sources":["/Users/eunbi/Documents/ebgit/do-it-react/src/03/NewCounter.jsx"],"names":["React","NewCounter","Component","constructor","props","state","increaseCount","bind","getDerivedStateFromProps","count","newCount","setState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,UAAN,SAAyBD,KAAK,CAACE,SAA/B,CAAyC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACD;;AAE8B,SAAxBC,wBAAwB,CAACJ,KAAD,EAAQC,KAAR,EAAe;AAC5C,UAAM;AAAEI,MAAAA;AAAF,QAAYL,KAAlB;AACA,WAAO;AACL;AACAK,MAAAA,KAFK;AAGLC,MAAAA,QAAQ,EACND,KAAK,KAAKJ,KAAK,CAACI,KAAhB,GACI;AACAJ,MAAAA,KAAK,CAACK,QAFV,GAGI;AACAD,MAAAA;AARD,KAAP;AAUD;;AACDH,EAAAA,aAAa,GAAG;AACd,SAAKK,QAAL,CAAc;AAAA,UAAC;AAAED,QAAAA;AAAF,OAAD;AAAA,aAAmB;AAC/BA,QAAAA,QAAQ,EAAEA,QAAQ,GAAG;AADU,OAAnB;AAAA,KAAd;AAGD;;AACDE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,sDACW,KAAKP,KAAL,CAAWK,QADtB,eAEE;AAAQ,QAAA,OAAO,EAAE,KAAKJ,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAhCsC;;AAmCzC,eAAeL,UAAf","sourcesContent":["import React from \"react\";\n\nclass NewCounter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.increaseCount = this.increaseCount.bind(this);\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const { count } = props;\n    return {\n      // 프로퍼티에서 전달된 count값을 보관\n      count,\n      newCount:\n        count === state.count\n          ? // 프로퍼티가 변경되지 않았다면 기존 state값으로 설정\n            state.newCount\n          : // 프로퍼티가 변경되었다면 변경된 프로퍼티값으로 설정\n            count,\n    };\n  }\n  increaseCount() {\n    this.setState(({ newCount }) => ({\n      newCount: newCount + 1,\n    }));\n  }\n  render() {\n    return (\n      <div>\n        현재 카운트: {this.state.newCount}\n        <button onClick={this.increaseCount}>카운트 증가</button>\n      </div>\n    );\n  }\n}\n\nexport default NewCounter;\n"]},"metadata":{},"sourceType":"module"}