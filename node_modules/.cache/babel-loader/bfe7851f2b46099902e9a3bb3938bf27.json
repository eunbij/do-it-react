{"ast":null,"code":"var _jsxFileName = \"/Users/eunbi/Documents/ebgit/do-it-react/src/03/ChildComponent.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ChildComponent extends React.Component {\n  render() {\n    const {\n      // 객체 구조 분해 할당식을 사용하여 프로퍼티에 전달된 값들을 render() 함수 내의 지역 변수로 재 정의\n      boolValue,\n      numValue,\n      arrayValue,\n      objValue,\n      nodeValue,\n      funcValue\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"\\uBD88\\uB9AC\\uC5B8\\uAC12: \", boolValue]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"\\uC22B\\uC790\\uAC12: \", numValue]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"\\uBC30\\uC5F4\\uAC12: \", arrayValue]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"\\uAC1D\\uCCB4\\uAC12: \", String(objValue)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"\\uB178\\uB4DC\\uAC12: \", nodeValue]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"\\uD568\\uC218\\uAC12: \", String(funcValue)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n  }\n\n} // 객체 형태로 프로퍼티의 자료형을 정의\n\n\nChildComponent.propTypes = {\n  boolValue: PropTypes.bool,\n  numValue: PropTypes.number,\n  arrayValue: PropTypes.arrayOf(PropTypes.number),\n  objValue: PropTypes.object,\n  nodeValue: PropTypes.node,\n  funcValue: PropTypes.func\n};\nexport default ChildComponent;","map":{"version":3,"sources":["/Users/eunbi/Documents/ebgit/do-it-react/src/03/ChildComponent.jsx"],"names":["React","PropTypes","ChildComponent","Component","render","boolValue","numValue","arrayValue","objValue","nodeValue","funcValue","props","String","propTypes","bool","number","arrayOf","object","node","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,cAAN,SAA6BF,KAAK,CAACG,SAAnC,CAA6C;AAC3CC,EAAAA,MAAM,GAAG;AACP,UAAM;AACJ;AACAC,MAAAA,SAFI;AAGJC,MAAAA,QAHI;AAIJC,MAAAA,UAJI;AAKJC,MAAAA,QALI;AAMJC,MAAAA,SANI;AAOJC,MAAAA;AAPI,QAQF,KAAKC,KART;AAUA,wBACE;AAAA,8BACE;AAAA,iDAAaN,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,2CAAYC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,2CAAYC,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA,2CAAYK,MAAM,CAACJ,QAAD,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAA,2CAAYC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAA,2CAAYG,MAAM,CAACF,SAAD,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AAtB0C,C,CAwB7C;;;AACAR,cAAc,CAACW,SAAf,GAA2B;AACzBR,EAAAA,SAAS,EAAEJ,SAAS,CAACa,IADI;AAEzBR,EAAAA,QAAQ,EAAEL,SAAS,CAACc,MAFK;AAGzBR,EAAAA,UAAU,EAAEN,SAAS,CAACe,OAAV,CAAkBf,SAAS,CAACc,MAA5B,CAHa;AAIzBP,EAAAA,QAAQ,EAAEP,SAAS,CAACgB,MAJK;AAKzBR,EAAAA,SAAS,EAAER,SAAS,CAACiB,IALI;AAMzBR,EAAAA,SAAS,EAAET,SAAS,CAACkB;AANI,CAA3B;AASA,eAAejB,cAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass ChildComponent extends React.Component {\n  render() {\n    const {\n      // 객체 구조 분해 할당식을 사용하여 프로퍼티에 전달된 값들을 render() 함수 내의 지역 변수로 재 정의\n      boolValue,\n      numValue,\n      arrayValue,\n      objValue,\n      nodeValue,\n      funcValue,\n    } = this.props;\n\n    return (\n      <div>\n        <span>불리언값: {boolValue}</span>\n        <span>숫자값: {numValue}</span>\n        <span>배열값: {arrayValue}</span>\n        <span>객체값: {String(objValue)}</span>\n        <span>노드값: {nodeValue}</span>\n        <span>함수값: {String(funcValue)}</span>\n      </div>\n    );\n  }\n}\n// 객체 형태로 프로퍼티의 자료형을 정의\nChildComponent.propTypes = {\n  boolValue: PropTypes.bool,\n  numValue: PropTypes.number,\n  arrayValue: PropTypes.arrayOf(PropTypes.number),\n  objValue: PropTypes.object,\n  nodeValue: PropTypes.node,\n  funcValue: PropTypes.func,\n};\n\nexport default ChildComponent;\n"]},"metadata":{},"sourceType":"module"}