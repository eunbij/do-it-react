{"version":3,"file":"main.iframe.bundle.js","sources":["webpack:///./.storybook/config.js","webpack:///./.storybook/config.js-generated-config-entry.js","webpack:///./src/03/Input.jsx","webpack:///./src/03/NewCounter.jsx","webpack:///./src/stories/InputStory.jsx","webpack:///./src/stories/NewCounterStory.jsx","webpack:///./storybook-init-framework-entry.js","webpack:///./util.inspect (ignored)"],"sourcesContent":["import { configure } from '@storybook/react';\n\nfunction loadStories() {\n    require('../src/stories/InputStory');\n    // 스토리 파일 추가\n    require('../src/stories/NewCounterStory')\n}\n\nconfigure(loadStories, module);","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable import/no-unresolved */\nimport { addDecorator, addParameters, addLoader, addArgs, addArgTypes, addArgsEnhancer, addArgTypesEnhancer, setGlobalRender } from '/Users/eunbi/Documents/ebgit/do-it-react/node_modules/@storybook/client-api';\nimport * as config from '/Users/eunbi/Documents/ebgit/do-it-react/.storybook/config.js';\nObject.keys(config).forEach(function (key) {\n  var value = config[key];\n\n  switch (key) {\n    case 'args':\n      {\n        return addArgs(value);\n      }\n\n    case 'argTypes':\n      {\n        return addArgTypes(value);\n      }\n\n    case 'decorators':\n      {\n        return value.forEach(function (decorator) {\n          return addDecorator(decorator, false);\n        });\n      }\n\n    case 'loaders':\n      {\n        return value.forEach(function (loader) {\n          return addLoader(loader, false);\n        });\n      }\n\n    case 'parameters':\n      {\n        return addParameters(_objectSpread({}, value), false);\n      }\n\n    case 'argTypesEnhancers':\n      {\n        return value.forEach(function (enhancer) {\n          return addArgTypesEnhancer(enhancer);\n        });\n      }\n\n    case 'argsEnhancers':\n      {\n        return value.forEach(function (enhancer) {\n          return addArgsEnhancer(enhancer);\n        });\n      }\n\n    case 'render':\n      {\n        return setGlobalRender(value);\n      }\n\n    case 'globals':\n    case 'globalTypes':\n      {\n        var v = {};\n        v[key] = value;\n        return addParameters(v, false);\n      }\n\n    case '__namedExportsOrder':\n    case 'decorateStory':\n    case 'renderToDOM':\n      {\n        return null; // This key is not handled directly in v6 mode.\n      }\n\n    default:\n      {\n        // eslint-disable-next-line prefer-template\n        return console.log(key + ' was not supported :( !');\n      }\n  }\n});","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Input extends PureComponent {\n  // 1. 클래스형 컴포넌트의 PureComponent 형태로 작성\n  constructor(props) {\n    super(props);\n    this.setRef = this.setRef.bind(this);\n    // this.handleChange = this.handleChange.bind(this);\n  }\n  handleChage(e) {\n    const { name, onChange } = this.props;\n    if (onChange) {\n      onChange(name, e.target.value);\n    }\n  }\n  componentDidMount() {\n    // 2. autoFocus값이 true일 경우 출력 후 input 박스에 자동으로 커서를 배치\n    if (this.props.autoFocus) {\n      this.ref.focus();\n    }\n  }\n  componentDidUpdate() {\n    // 3. autoFocus값이 true일 경우 출력 후 input 박스에 자동으로 커서를 배치\n    if (this.props.autoFocus) {\n      this.ref.focus();\n    }\n  }\n  setRef(ref) {\n    this.ref = ref;\n  }\n  render() {\n    const { errorMessage, label, name, value, type, onFocus } = this.props;\n    return (\n      <label>\n        {/* 4. label 안에 전달받은 label값을 출력 */}\n        {label}\n        <input\n          id={`input_${name}`}\n          ref={this.setRef}\n          // 5. input 값이 변경될 때 onChange 콜백 함수를 호출\n          onChange={this.handleChange}\n          // 6. 프로퍼티로 전달받은 콜백 함수를 DOM 이벤트 프로퍼티에 연결하여 input에 마우스 커서가 포커스될 때 상위 컴포넌트의 콜백 함수를 호출\n          onFocus={onFocus}\n          value={value}\n          type={type}\n        />\n        {/* 7. errorMessage가 존재할 경우 출력 */}\n        {errorMessage && <span className=\"error\">{errorMessage}</span>}\n      </label>\n    );\n  }\n}\n\nInput.propTypes = {\n  // 8. 문자열형의 값 'text', 'number', 'price' 중 하나의 값만 가질 수 있음\n  type: PropTypes.oneOf([\"text\", \"number\", \"price\"]),\n  name: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  errorMessage: PropTypes.string,\n  label: PropTypes.string,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func,\n  autoFocus: PropTypes.bool,\n};\nInput.defaultProps = {\n  onChage: () => {},\n  onFocus: () => {},\n  autoFocus: false,\n  // 9. type의 기본값은 'text'\n  type: \"text\",\n};\nexport default Input;\n","import React from \"react\";\n\nclass NewCounter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.increaseCount = this.increaseCount.bind(this);\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const { count } = props;\n    return {\n      // 프로퍼티에서 전달된 count값을 보관\n      count,\n      newCount:\n        count === state.count\n          ? // 프로퍼티가 변경되지 않았다면 기존 state값으로 설정\n            state.newCount\n          : // 프로퍼티가 변경되었다면 변경된 프로퍼티값으로 설정\n            count,\n    };\n  }\n  increaseCount() {\n    this.setState(({ newCount }) => ({\n      newCount: newCount + 1,\n    }));\n  }\n  render() {\n    return (\n      <div>\n        현재 카운트: {this.state.newCount}\n        <button onClick={this.increaseCount}>카운트 증가</button>\n      </div>\n    );\n  }\n}\n\nexport default NewCounter;\n","import React from \"react\";\nimport { storiesOf } from \"@storybook/react\";\n\nimport Input from \"../03/Input\";\n\nstoriesOf(\"Input\", module)\n  .add(\"기본 설정\", () => <Input name=\"name\" />)\n  .add(\"label 예제\", () => <Input name=\"name\" label=\"이름\" />);\n","import React from \"react\";\nimport { storiesOf } from \"@storybook/react\";\n\nimport NewCounter from \"../03/NewCounter\";\n\nstoriesOf(\"NewCounter\", module).add(\"기본 설정\", () => (\n  <NewCounter count={0} />\n));\n","import '@storybook/react';","/* (ignored) */"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAEA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApEA;AAsEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClFA;AACA;;;;AAEA;;;;;AACA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AAHA;AAIA;AACA;;;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAIA;AACA;AAFA;AAIA;AAJA;AAMA;AACA;AACA;AARA;AAWA;AAAA;AAAA;AAdA;AAiBA;;;;AAhDA;AACA;AAkDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxEA;;;;AAEA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AAHA;AAIA;AACA;;;AAcA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAGA;;;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAFA;AAKA;;;AAzBA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AARA;AAUA;;;;AAnBA;AACA;AAkCA;;;;;;;;;;;;;ACrCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;;AAEA;AAAA;AACA;AAAA;AADA;;;;;;;;;;;;;;ACLA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}